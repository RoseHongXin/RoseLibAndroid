apply plugin: 'com.android.library'
apply from:"LibConfig.gradle"

android {
    compileSdkVersion props.compileSdkVersion
    buildToolsVersion props.buildToolsVersion

    defaultConfig {
        minSdkVersion props.minSdkVersion
        targetSdkVersion props.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled buildVars.proguard
            zipAlignEnabled buildVars.proguard
            if(buildVars.proguard) proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled buildVars.proguard
            zipAlignEnabled buildVars.proguard
            if(buildVars.proguard) proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            List<String> resDirs = new ArrayList<>()
            getDirs(resDirs, file("src").listFiles(), "res")
            for (int i = 0; i < resDirs.size(); i++) {
                res.srcDirs resDirs.get(i)
            }
            List<String> javaDirs = new ArrayList<>()
            getDirs(javaDirs, file("src").listFiles(), "java")
            for (int i = 0; i < javaDirs.size(); i++) {
                java.srcDirs javaDirs.get(i)
            }
        }
    }
}

dependencies {
    api 'androidx.core:core:1.0.2'
    api 'androidx.recyclerview:recyclerview:1.0.0'
    api 'androidx.cardview:cardview:1.0.0'
    api 'androidx.fragment:fragment:1.1.0-alpha08'
    api 'com.google.android.material:material:1.1.0-alpha06'
    api 'androidx.appcompat:appcompat:1.1.0-alpha05'
    api 'androidx.percentlayout:percentlayout:1.0.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'

    api 'com.fasterxml.jackson.core:jackson-core:' + ver.jackson
    api 'com.fasterxml.jackson.core:jackson-annotations:' + ver.jackson
    api 'com.fasterxml.jackson.core:jackson-databind:' + ver.jackson
    api 'com.alibaba:fastjson:' + ver.fastjson
    api 'io.reactivex.rxjava2:rxjava:' + ver.rxjava
    api 'io.reactivex.rxjava2:rxandroid:' + ver.rxandroid
    api 'com.jakewharton:butterknife:' + ver.butterknife
//    annotationProcessor 'com.jakewharton:butterknife-compiler:' + ver.butterknife
    api 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    api "com.squareup.okhttp3:okhttp:" + ver.okhttp3
    api "com.squareup.okhttp3:logging-interceptor:" + ver.okhttp3

    api 'com.cncoderx.wheelview:library:1.2.2'  //https://github.com/CNCoderX/WheelView

}

void getDirs(List<String> list, dirs, String key){
    dirs.each{
        if(it.isDirectory()){
            if(it.name == key) list.add(it)
            else getDirs(list, it.listFiles(), key)
        }
    }
}