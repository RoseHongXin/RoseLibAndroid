apply plugin: 'com.android.library'
apply from:"LibConfig.gradle"

android {
    compileSdkVersion props.compileSdkVersion
    buildToolsVersion props.buildToolsVersion

    defaultConfig {
        minSdkVersion props.minSdkVersion
        targetSdkVersion props.targetSdkVersion
        consumerProguardFiles 'consumer-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled buildVars.proguard
            zipAlignEnabled buildVars.proguard
            if(buildVars.proguard) { proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' }
        }
        debug {
            minifyEnabled buildVars.proguard
            zipAlignEnabled buildVars.proguard
            if(buildVars.proguard) { proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' }
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs "src/_res/res", "src/extension/ptrlib/res", "src/main/res"
            java.srcDirs "src/extension/ptrlib/java", "src/main/java"
        }
    }
}

dependencies {
    api 'androidx.core:core:1.8.0'
    api 'androidx.recyclerview:recyclerview:1.2.1'
    api 'androidx.cardview:cardview:1.0.0'
    api 'androidx.fragment:fragment:1.5.1'
    api 'com.google.android.material:material:1.4.0'
    api 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    api 'androidx.constraintlayout:constraintlayout:2.1.4'
    api 'androidx.viewpager:viewpager:1.0.0'

    api 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    api 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    api 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
//    api 'com.alibaba:fastjson:1.2.76'
    api 'io.reactivex.rxjava3:rxjava:3.1.5'
    api 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'com.jakewharton:butterknife:10.2.3'
//    implementation annotationProcessor 'com.jakewharton:butterknife-compiler:' + ver.butterknife
//    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-material:4.0.0'
    api 'com.squareup.okhttp3:okhttp:3.14.1'    //测试机兼容
    api 'com.squareup.okhttp3:logging-interceptor:3.14.1'

    implementation 'com.cncoderx.wheelview:library:1.2.2'  //https://github.com/CNCoderX/WheelView

}

/*
getDirs(resDirs, file("src").listFiles(), "res")
for (int i = 0; i < resDirs.size(); i++) {
    res.srcDirs resDirs.get(i)
}
List<String> javaDirs = new ArrayList<>()
getDirs(javaDirs, file("src").listFiles(), "java")
for (int i = 0; i < javaDirs.size(); i++) {
    java.srcDirs javaDirs.get(i)
}
void getDirs(List<String> list, dirs, String key){
    dirs.each{
        if(it.isDirectory()){
            if(it.name == key) list.add(it)
            else getDirs(list, it.listFiles(), key)
        }
    }
}
*/


